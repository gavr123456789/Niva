//type Assert
//constructor Assert that::Any equals::Any -> Unit = [
//  that != equals => [
//    Error throwWithMessage: "Assertion failed: $that != $equals"
//  ]
//]
//Assert that: "sas" equals: "sas"

Any echoD = [
//    receiverName = Compiler getName: 0
//    value = this toString
//    "$receiverName is $value" echo
    // Type

//    typeType = Compiler getType: 0
//    fields = typeType fields
//    a_field = fields get: "a"
//    a_field unpack: [
//        it echo
//    ]

]
// syntax for destructing
//    a,b,c = {1 2 3}


Error throwWithMessage: "sas"

//Bind package: "java.lang" content: [
//  type ProcessBuilder command: MutableList::String
//
//  @emit: "ProcessBuilder($1).directory(java.io.File($2))"
//  constructor ProcessBuilder command::MutableList::String dir::String -> ProcessBuilder
//  // enum Redirect = INHERIT | PIPE | READ | WRITE
//
//  type Process
//
//  ProcessBuilder start -> Process
//
//  @emit: "$0.redirectOutput(ProcessBuilder.Redirect.INHERIT).redirectError(ProcessBuilder.Redirect.INHERIT)"
//  ProcessBuilder redirectOutput -> ProcessBuilder
//
//  Process waitFor -> Int
//
//  @emit: """System.getProperty("user.dir")"""
//  constructor Process currentDir -> String
//]
//
//(ProcessBuilder command: {"pwd"} dir: "../.." )|> redirectOutput
