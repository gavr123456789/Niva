//type Assert
//constructor Assert that::Any equals::Any -> Unit = [
//  that != equals => [
//
//    Error throwWithMessage: "Assertion failed: $that != $equals"
//  ]
//]
//
//Assert that: "sas" equals: "sas"
//Assert that: "sas" equals: "sus"
//Project target: "linux" mode: "release"


// Brainfuck


//"a.b" substringAfter: "." |> echo
//"a.b" substringBefore: "." |> echo
//"a.b.c" substringAfterLast: "." |> echo
//"a.b.c" substringBeforeLast: "." |> echo
//
//Int key::Int word::String = 1 echo
//Int key: x::Int = 1 echo


type Person
extend Person [
  on unary = 1 echo
  on + binary::Int = 1 echo
  on key::Int word::String = 1 echo
  on withLocalName: x::Int = 1 echo
]

p = Person new

p unary
p + 5
p key: 1 word: "2"
p withLocalName: 1

//Int foobar =[
//    "uups" echo
//    Error throwWithMessage: "hawwo"
//]
//Int bar = this foobar
//Int foo = this bar
//
//1 foo

