Bind package: "kotlin.reflect" content: [
    @rename: "KClass"
    type Class::T

    @emit: "$0::class"
    T class -> Class::T

    Class::T cast::Any? -> T

    Class::T isInstance::Any? -> Boolean

    @emit: "$0::class"
    constructor T class -> Class::T

    @emit: "$0!!"
    T? assertNotNull -> T
]

errordomain Match = | Unmatched

type MatchBlock = [I -> R!Unmatched]

Class::C matchWith::[C -> R] -> MatchBlock = ^[ input::I ->
    (.isInstance: input) ifTrue: [
        matchWith C: (.cast: input)
    ] ifFalse: [
        Unmatched throwWithMessage: "No match"
    ]
]

