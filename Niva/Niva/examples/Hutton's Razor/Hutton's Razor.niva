union Node =
| Sub left: Node right: Node
| Add left: Node right: Node
| Value v: Int

Node walk -> Int = | this
| Add => left walk + right walk
| Sub => left walk - right walk
| Value => v

expr = Add
  right: (
    Add
      right: (Value v: 10)
      left: (
        Sub
          left: (Value v: 40)
          right: (Value v: 20)
      )
  )
  left: (Value v: 40)

expr walk echo
