type Program
  io: IO


type FilePath = String
type FileContent = String

type IO
  readFile: [FilePath -> String]
  writeFile: [FilePath, FileContent -> String] // 
  walkDir: [FilePath -> List::String]


/// takes fileNames to Content
type NivaCompiler 
/// takes main file and collects all the files for compilation
type NivaBuildSystem





resolve = [
  fileMain = """
    //type Box x: T y: T
    //box = Box x: 1 y: 2

    1 + "str"

    
  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"
  db = result db
  typedAst = result fileToStatements at: "main", unpackOrPANIC  

  Assert that: db listOfErrors count equals: 3
  

] do