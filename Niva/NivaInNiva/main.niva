type Program 
  readFile: [String -> String]
  walkDir: [String -> List::String]

  // input = "1 + 2 inc"

  // statements = TestParse withInput: input expectedCount: 1
  // "\n\n\n" echo
  // typeDecl = statements at: 0



  input = """
    Int + inc::String -> Boolean = [
      1 inc
    ]
  """ trimIndent

  statements = TestParse withInput: input expectedCount: 1
  binary = statements at: 0
  binary debug


  // | binary 
  // | MessageDecl => [
  //   Assert 
  //     that: binary name
  //     equals: "+"
  //   Assert
  //     that: binary args count
  //     equals: 1
    
  //   {receiver returnType} = binary
    
  //   Assert 
  //     that: receiver name 
  //     equals: "Int"
  //   Assert 
  //     that: returnType unpackOrPANIC name 
  //     equals: "Boolean"
  //   ]
  // |=> [TO DO: "It should be MessageDecl, but it " + binary toString]