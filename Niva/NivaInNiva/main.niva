type Program
  io: IO


type FilePath = String
type FileContent = String

type IO
  readFile: [FilePath -> String]
  writeFile: [FilePath, FileContent -> String] // 
  walkDir: [FilePath -> List::String]


/// takes fileNames to Content
type NivaCompiler 
/// takes main file and collects all the files for compilation
type NivaBuildSystem


 scopeVariables = [
  fileMain = """
    a = 0
    codeBlock = [
      b = 1
      b inc
      codeblock2 = [
        c = 2
        a inc
      ]
    ]
  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"
  db = result db
  typedAst = result fileToStatements at: "main", unpackOrPANIC  
] do


newResolve = [
  fileMain = """
    type Person age: Int 
    Person age: 27
    
    // Int sas = [
      // p = Person age: 27 
    // ]
    
    //1 inc
  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"

  
] 


tsBack = [
  fileMain = """
    x = "hello from niva ts backend!!! ^_^"
    x echo
  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"
  db = result db
  typedAst = result fileToStatements at: "main", unpackOrPANIC  

  // typedAst first toTyped nivaType log
  typedAst debug

  TSBackend mainStatements: typedAst sb: StringBuilder new, generate

] 

resolveMatch = [
  fileMain = """
    | 1
    | 1 => [1 echo]
    | 2 => [2 echo]
    |=> 3 echo
  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"
  db = result db
  typedAst = result fileToStatements at: "main", unpackOrPANIC  

  // typedAst first toTyped nivaType log
  typedAst debug
] 


resolveGenerics = [
  fileMain = """
    type Box x: T y: T
    // box = Box x: "sas" y: "42"


    Box(Int) sas -> Unit = [42]


    //Box sasat::T = [
    //  sasat inc
    //]

  """


  result = ResolverHelper resolve: #{"main" fileMain} entryPoint: "main"
  db = result db
  typedAst = result fileToStatements at: "main", unpackOrPANIC  

  

] 

