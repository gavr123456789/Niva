Statement toTS -> String= 
    | this
    | TypeDecl => [""]
    | EnumDecl => [TO DO]
    | UnionDecl => [TO DO]
    | MessageDecl => [
        
        sb = StringBuilder new
        methodName = name + "_" + receiver name
        
        sb append: "export function "
        sb append: methodName

        
        argsStr = "_this" +
            (args isNotEmpty ifTrue: [", "] 
                             ifFalse: [""]) +
            (args joinWith: ", " 
                  transform: [it name])


        sb append: "("
        sb append: argsStr
        sb append: ") {\n"

        this body typedBody2 forEach: [expr -> 
            sb append: "    "
            sb appendLine: expr toTS
        ]

        sb append: "}"
        sb toString 
    ]
    |=> [
        "toTS: skipping top level expr: " + this token toString, log
        ""
    ]